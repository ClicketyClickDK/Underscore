NAME
      _MsgBox -- Search file for a pattern and print remainder of string
 
SYNOPSIS
  _MsgBox [ButtonID] [Window title] [Message]
 
OPTIONS
  -h      Help page
 
DESCRIPTION
  _MsgBox opens a window with:
  a title, a message, type based icon and reply buttons.

  The return value [ErrorLevel] is the value of the button pressed.

 
BUTTONS
  [Optional]
  A value or a sum of values that specifies the number and type of buttons 
  to display, the icon style to use, the identity of the default button, 
  and the modality of the message box. 
  Default value is 0
 
    0 = vbOKOnly           - OK button only
    1 = vbOKCancel         - OK and Cancel buttons
    2 = vbAbortRetryIgnore - Abort, Retry, and Ignore buttons
    3 = vbYesNoCancel      - Yes, No, and Cancel buttons
    4 = vbYesNo            - Yes and No buttons
    5 = vbRetryCancel      - Retry and Cancel buttons
   16 = vbCritical         - Critical Message icon
   32 = vbQuestion         - Warning Query icon
   48 = vbExclamation      - Warning Message icon
   64 = vbInformation      - Information Message icon
    0 = vbDefaultButton1   - First button is default
  256 = vbDefaultButton2   - Second button is default
  512 = vbDefaultButton3   - Third button is default
  768 = vbDefaultButton4   - Fourth button is default
    0 = vbApplicationModal - Application modal 
                              (the current application will not work 
                              until the user responds to the message box)
 4096 = vbSystemModal      - System modal 
                              (all applications wont work until the user 
                              responds to the message box)
 
  We can divide the buttons values into four groups: 
  - The first group (0-5) describes the buttons to be displayed in the 
    message box,
  - the second group (16, 32, 48, 64) describes the icon style, 
  - the third group (0, 256, 512, 768) indicates which button is the default; 
  - and the fourth group (0, 4096) determines the modality of the message box. 
 
  When adding numbers to create a final value for the buttons parameter, use
  only one number from each group

EXAMPLES
      _MsgBox 35 "_TITLE" "_MSG"

  Will open a window with a question and YesNoCancel
  Select [Yes] and the script will return the value 6
      
  A extended example:
      
      :msgbox
          SET _INPUT=
          SET _TITLE=window title
          SET _MSG=Hello world.{CrLf}Please select:
          CALL _MsgBox.bat 35 "%_TITLE%" "%_MSG%"
          CALL :RETURN %errorlevel%
      GOTO :EOF
      
      :return
          IF ERRORLEVEL 7 ECHO:7 = vbNo     - No was clicked      &GOTO :EOF
          IF ERRORLEVEL 6 ECHO:6 = vbYes    - Yes was clicked     &GOTO :EOF
          IF ERRORLEVEL 5 ECHO:5 = vbIgnore - Ignore was clicked  &GOTO :EOF
          IF ERRORLEVEL 4 ECHO:4 = vbRetry  - Retry was clicked   &GOTO :EOF
          IF ERRORLEVEL 3 ECHO:3 = vbAbort  - Abort was clicked   &GOTO :EOF
          IF ERRORLEVEL 2 ECHO:2 = vbCancel - Cancel was clicked  &GOTO :EOF
          IF ERRORLEVEL 1 ECHO:1 = vbOK     - OK was clicked      &GOTO :EOF
          ECHO:Undefined value [%errorlevel%]
      GOTO :EOF

  The MsgBox function can return one of the following values:
  7 = vbNo     - No was clicked
  6 = vbYes    - Yes was clicked
  5 = vbIgnore - Ignore was clicked
  4 = vbRetry  - Retry was clicked
  3 = vbAbort  - Abort was clicked
  2 = vbCancel - Cancel was clicked 
  1 = vbOK     - OK was clicked

REQUIRES
  _Debug.cmd      Setting up debug environment for batch scripts 
  _GetOpt.cmd     Parse command line options and create environment vars
 
SEE ALSO
  _inputBox.bat


SOURCE
  C:\_\_MsgBox.bat

(c)2015 Erik Bachmann, ClicketyClick.dk (E_Bachmann@ClicketyClick.dk)

