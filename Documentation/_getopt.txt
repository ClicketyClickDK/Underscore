NAME
  _GetOpt -- Parse command line options and create environment vars
 
SYNOPSIS
      CALL _GetOpt %*
  
OPTIONS
  -h      Usage/Help page and exit 1 (Hard coded)
  -? /?   Usage/Help page and exit 1 (Hard coded)
  -! /!   Debug on (Hard coded)   See BUGS section. Use --Debug:1
  -!- /!- Debug off (Hard coded)  See BUGS section. Use --Debug:0
  
DESCRIPTION
  Build named environment variables from command line options
  
  Arguments can either be:
      Simple      Like a name with no prefix [filename]
      Option      Letter prefixed with one valid flag prefix [-h]
      Combined    Option with a value separated by colon [-f:name]
      Long        Long option [--help]
      Long comb.  Long option with a value [--file:name]
  
  Valid flag prefixes are  "-" or "/".
  The seperator between option and value can only be colon since
  WinDOS will treat = as a blank.
  If $NAME is not a defined environment var "UNDEFINED" is used as $NAME
  
      filename            Simple argument stored in sequential numbered 
                          environment variables: @UNDEFINED.1=filename
      -file:filename      Combined argument: @UNDEFINED.file=filename
      /file:filename      Combined argument: @UNDEFINED.file=filename
      --//file:filename   Combined argument: @UNDEFINED.file=filename
 
  NOTE!
      If you entend to nest scripts both using _GetOpt you must 
      start the nested script with a SETLOCAL statement to preserve
      the callers environment!
 
EXAMPLES:
  SET $NAME=x
  ::Parse options to current script
  CALL _GetOpt %*
    
  ::Show options
  set @x
    
  ::Clear env vars
  CALL _GetOpt
 
  If x.bat contains the statement:
      SET $NAME=x
      CALL _GetOpt %*
      SET @
 
  :: Enable delayed expansion of vars to use content of vars
      SETLOCAL ENABLEDELAYEDEXPANSION
      ECHO z=!@_GetOpt.z!! 
      SETLOCAL DISABLEDELAYEDEXPANSION
 
  :: Or hard code reference
      ECHO a=%@x.z%
 
  :: Clear flags
      CALL _GetOpt
 
  Executing: x.bat -y:z -flag file -z:"hello world"
 
  x.bat will have the environment:
      $x.x=yy
      @x.z=1
 
  CALL x.bat -y:z -flag file -z:"hello world"
      @x.1=file
      @x.flag=1
      @x.y=z
      @x.z="hello world"
 
  NOTE: "-flag" and "file" are NOT combined
 
REQUIRES
  _Debug.cmd      Setting up debug environment for batch scripts 
  
EXIT STATUS
  0   OK
  1   Usage (or error)
  
ENVIRONMENT
  Will change environment according to the given arguments.
 
  If environment var DEBUG is defined and > 1 debug will be enabled as default.
 
BUGS / KNOWN PROBLEMS
  -! and /! will activate debug and set env variable @x.debug=1
  -!- and /!- will deactivate debug BUT set env variable @x.debug=1
  
  ! flags are not available if you use delayed expantion as in 
  SETLOCAL ENABLEDELAYEDEXPANSION
  
REQUIRES
  _Debug.cmd      Setting up debug environment for batch scripts 
  what.cmd        Show usage
 
REFERENCES:
  https://en.wikipedia.org/wiki/Getopt
  
SOURCE
  C:\_\_GetOpt.cmd
(c)2015 Erik Bachmann, ClicketyClick.dk (ErikBachmann@ClicketyClick.dk)

